version: '3.9'
services:
  nodejs:
    container_name: nodejs_container
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    image: nodejs_image:latest # name custom
    ports:
      - "443:443"
    depends_on:
      - mongodb
      - minio
      - mysql
    networks:
      - nhinguyen-network

  mongodb:
    image: mongo:5.0.2
    container_name: mongodb_container
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=sa
      - MONGO_INITDB_ROOT_PASSWORD=sapassword
    volumes:
      - mongodb-data:/data/db
      # - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - nhinguyen-network

  minio:
    image: minio/minio
    container_name: minio_container
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server --console-address :9001 /data
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    networks:
      - nhinguyen-network

  mysql:
    image: mysql:latest
    container_name: mysql_container
    restart: always
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_DATABASE: "main"
      MYSQL_CHARSET: utf8
      MYSQL_COLLATION: utf8_general_ci
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init-mysql.sql:/docker-entrypoint-initdb.d/init-mysql.sql
    networks:
      - nhinguyen-network

networks:
  nhinguyen-network:
    driver: bridge
volumes:
  mongodb-data:
  minio-data:
  mysql-data: